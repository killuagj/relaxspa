<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ssm.dao.PoolMapper">
  <resultMap id="BaseResultMap" type="ssm.pojo.Pool">
    <constructor>
      <idArg column="pool_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="pool_name" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="pool_duration" javaType="java.lang.Double" jdbcType="DOUBLE" />
      <arg column="pool_price" javaType="java.lang.Double" jdbcType="DOUBLE" />
      <arg column="pool_left_count" javaType="java.lang.Integer" jdbcType="INTEGER" />
    </constructor>
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="ssm.pojo.Pool">
    <constructor>
      <idArg column="pool_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="pool_name" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="pool_duration" javaType="java.lang.Double" jdbcType="DOUBLE" />
      <arg column="pool_price" javaType="java.lang.Double" jdbcType="DOUBLE" />
      <arg column="pool_left_count" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="pool_description" javaType="java.lang.String" jdbcType="LONGVARCHAR" />
    </constructor>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    pool_id, pool_name, pool_duration, pool_price, pool_left_count
  </sql>
  <sql id="Blob_Column_List">
    pool_description
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="ssm.pojo.PoolExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from pool
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="ssm.pojo.PoolExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from pool
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from pool
    where pool_id = #{poolId,jdbcType=INTEGER}
  </select>
  <select id="selectByPoolName" parameterType="java.lang.String" resultMap="ResultMapWithBLOBs">
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from pool
    where pool_name = #{poolName,jdbcType=VARCHAR}
  </select>
  <select id="selectAll" resultMap="ResultMapWithBLOBs">
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from pool
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from pool
    where pool_id = #{poolId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="ssm.pojo.PoolExample">
    delete from pool
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="ssm.pojo.Pool">
    insert into pool (pool_id, pool_name, pool_duration, 
      pool_price, pool_left_count, pool_description
      )
    values (#{poolId,jdbcType=INTEGER}, #{poolName,jdbcType=VARCHAR}, #{poolDuration,jdbcType=DOUBLE}, 
      #{poolPrice,jdbcType=DOUBLE}, #{poolLeftCount,jdbcType=INTEGER}, #{poolDescription,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="ssm.pojo.Pool">
    insert into pool
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="poolId != null">
        pool_id,
      </if>
      <if test="poolName != null">
        pool_name,
      </if>
      <if test="poolDuration != null">
        pool_duration,
      </if>
      <if test="poolPrice != null">
        pool_price,
      </if>
      <if test="poolLeftCount != null">
        pool_left_count,
      </if>
      <if test="poolDescription != null">
        pool_description,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="poolId != null">
        #{poolId,jdbcType=INTEGER},
      </if>
      <if test="poolName != null">
        #{poolName,jdbcType=VARCHAR},
      </if>
      <if test="poolDuration != null">
        #{poolDuration,jdbcType=DOUBLE},
      </if>
      <if test="poolPrice != null">
        #{poolPrice,jdbcType=DOUBLE},
      </if>
      <if test="poolLeftCount != null">
        #{poolLeftCount,jdbcType=INTEGER},
      </if>
      <if test="poolDescription != null">
        #{poolDescription,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="ssm.pojo.PoolExample" resultType="java.lang.Integer">
    select count(*) from pool
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update pool
    <set>
      <if test="record.poolId != null">
        pool_id = #{record.poolId,jdbcType=INTEGER},
      </if>
      <if test="record.poolName != null">
        pool_name = #{record.poolName,jdbcType=VARCHAR},
      </if>
      <if test="record.poolDuration != null">
        pool_duration = #{record.poolDuration,jdbcType=DOUBLE},
      </if>
      <if test="record.poolPrice != null">
        pool_price = #{record.poolPrice,jdbcType=DOUBLE},
      </if>
      <if test="record.poolLeftCount != null">
        pool_left_count = #{record.poolLeftCount,jdbcType=INTEGER},
      </if>
      <if test="record.poolDescription != null">
        pool_description = #{record.poolDescription,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update pool
    set pool_id = #{record.poolId,jdbcType=INTEGER},
      pool_name = #{record.poolName,jdbcType=VARCHAR},
      pool_duration = #{record.poolDuration,jdbcType=DOUBLE},
      pool_price = #{record.poolPrice,jdbcType=DOUBLE},
      pool_left_count = #{record.poolLeftCount,jdbcType=INTEGER},
      pool_description = #{record.poolDescription,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update pool
    set pool_id = #{record.poolId,jdbcType=INTEGER},
      pool_name = #{record.poolName,jdbcType=VARCHAR},
      pool_duration = #{record.poolDuration,jdbcType=DOUBLE},
      pool_price = #{record.poolPrice,jdbcType=DOUBLE},
      pool_left_count = #{record.poolLeftCount,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="ssm.pojo.Pool">
    update pool
    <set>
      <if test="poolName != null">
        pool_name = #{poolName,jdbcType=VARCHAR},
      </if>
      <if test="poolDuration != null">
        pool_duration = #{poolDuration,jdbcType=DOUBLE},
      </if>
      <if test="poolPrice != null">
        pool_price = #{poolPrice,jdbcType=DOUBLE},
      </if>
      <if test="poolLeftCount != null">
        pool_left_count = #{poolLeftCount,jdbcType=INTEGER},
      </if>
      <if test="poolDescription != null">
        pool_description = #{poolDescription,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where pool_id = #{poolId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="ssm.pojo.Pool">
    update pool
    set pool_name = #{poolName,jdbcType=VARCHAR},
      pool_duration = #{poolDuration,jdbcType=DOUBLE},
      pool_price = #{poolPrice,jdbcType=DOUBLE},
      pool_left_count = #{poolLeftCount,jdbcType=INTEGER},
      pool_description = #{poolDescription,jdbcType=LONGVARCHAR}
    where pool_id = #{poolId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="ssm.pojo.Pool">
    update pool
    set pool_name = #{poolName,jdbcType=VARCHAR},
      pool_duration = #{poolDuration,jdbcType=DOUBLE},
      pool_price = #{poolPrice,jdbcType=DOUBLE},
      pool_left_count = #{poolLeftCount,jdbcType=INTEGER}
    where pool_id = #{poolId,jdbcType=INTEGER}
  </update>
</mapper>